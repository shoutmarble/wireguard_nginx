networks:
  wireguard_network:
    external: true

services:
  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - SERVERURL=wireguard.landingdev.xyz
      - SERVERPORT=51820
      - PEERS=proxy,livekit,redis,coturn,whoami
      - PEERDNS=auto
      - INTERNAL_SUBNET=10.13.13.0
      - ALLOWEDIPS=10.13.13.0/24
      - LOG_CONFS=true
    volumes:
      - ./wg_config:/config
      - /lib/modules:/lib/modules
    ports:
      - "51820:51820/udp"
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.disable_ipv6=1
    networks:
      - wireguard_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/bin/ping", "-c", "4", "localhost"]
      interval: 10s
      timeout: 10s
      retries: 4
      start_period: 10s

  wireguard_proxy:
    image: linuxserver/wireguard
    container_name: wireguard_proxy
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      # LIVEKIT
      - "7880:7880"
      - "7881:7881"
      # COTURN
      - "3478:3478"
      - "3478:3478/udp"
      # match port range in livekit.yaml
      - "50000-50500:50000-50500/udp"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - ./wg_proxy_config:/config
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      - wireguard_network
    restart: unless-stopped
    depends_on:
      wireguard:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wg", "show"]
      interval: 10s
      timeout: 10s
      retries: 4
      start_period: 10s

  proxy:
    image: nginx:latest
    container_name: proxy
    network_mode: service:wireguard_proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    restart: unless-stopped
    depends_on:
      wireguard_proxy:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 10s
      retries: 4
      start_period: 10s

  wireguard_livekit:
    image: linuxserver/wireguard
    container_name: wireguard_livekit
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - ./wg_livekit_config:/config
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      - wireguard_network
    restart: unless-stopped
    depends_on:
      proxy:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wg", "show"]
      interval: 10s
      timeout: 10s
      retries: 4
      start_period: 10s

  livekit:
    image: livekit/livekit-server:latest
    container_name: livekit
    # command: ["--config", "/etc/livekit.yaml"]
    command: --config /etc/livekit.yaml --node-ip 10.13.13.3
    restart: unless-stopped
    network_mode: service:wireguard_livekit
    volumes:
      - ./livekit.yaml:/etc/livekit.yaml
      - ./certs:/certs
    environment:
      - LIVEKIT_NODE_IP=10.13.13.3
    depends_on:
      wireguard_livekit:
        condition: service_healthy
      redis:
        condition: service_healthy
      coturn:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wg", "show"]
      interval: 10s
      timeout: 10s
      retries: 4
      start_period: 10s
    
  wireguard_redis:
    image: linuxserver/wireguard
    container_name: wireguard_redis
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - ./wg_redis_config:/config
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      - wireguard_network
    restart: unless-stopped
    depends_on:
      proxy:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wg", "show"]
      interval: 10s
      timeout: 10s
      retries: 4
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    network_mode: service:wireguard_redis
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis_conf/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ./redis_conf/users.acl:/usr/local/etc/redis/users.acl:ro
      - ./certs:/certs
    depends_on:
      wireguard_redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "10.13.13.4", "-p", "6379", "--user", "livekit-redis", "-a", "livekit-redis", "ping"]
      interval: 10s
      timeout: 10s
      retries: 4
      start_period: 10s

  wireguard_coturn:
    image: linuxserver/wireguard
    container_name: wireguard_coturn
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - ./wg_coturn_config:/config
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      - wireguard_network
    restart: unless-stopped
    depends_on:
      proxy:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wg", "show"]
      interval: 10s
      timeout: 10s
      retries: 4
      start_period: 10s

  coturn:
    image: coturn/coturn:latest
    container_name: coturn
    restart: unless-stopped
    network_mode: service:wireguard_coturn
    user: "root"
    volumes:
      - ./certs/landingdev.xyz.pem:/coturn/certs/cert.pem
      - ./certs/landingdev.xyz.key:/coturn/certs/privKey.pem
      - ./coturn-data:/var/lib/coturn
      - ./turnserver.conf:/etc/coturn/turnserver.conf:ro \
    depends_on:
      wireguard_coturn:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "find /proc -maxdepth 2 -name exe -lname '*turnserver*' | grep -q . || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 4
      start_period: 10s
