networks:
  wireguard_network:
    external: true

volumes:
  caddy_data: {}

services:
  wireguard_caddy:
    image: linuxserver/wireguard
    container_name: wireguard_caddy
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - ./wg_caddy_config:/config  # New config dir
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      - wireguard_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wg", "show"]
      interval: 30s
      timeout: 10s
      retries: 3

##############
  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    container_name: caddy
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    network_mode: service:wireguard_caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./certs:/data
      - ./Caddyfile:/etc/caddy/Caddyfile:ro  # Mount custom Caddyfile
    depends_on:
      - wireguard_caddy
    restart: unless-stopped

##############

  whoami:
    image: traefik/whoami:latest
    container_name: whoami
    depends_on:
      - caddy
    network_mode: service:caddy
    # labels:
    #   caddy: whoami.landingdev.xyz
    #   caddy.reverse_proxy: "{{upstreams 80}}"
    restart: unless-stopped
