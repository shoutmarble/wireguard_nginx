networks:
    traefik:
        external: true

volumes:
  postgres_data:
  plugins:
  etherpad-var:

services:
  etherpad:
    image: etherpad/etherpad:latest
    container_name: ether
    hostname: ether
    domainname: landingdev.xyz
    networks:
      traefik:
        ipv4_address: 172.20.8.10
    volumes:
      - plugins:/opt/etherpad-lite/node_modules
#      - plugins:/opt/etherpad-lite/src/plugin_packages
      - etherpad-var:/opt/etherpad-lite/var
    depends_on:
      - postgres
    environment:
      NODE_ENV: production
      ADMIN_PASSWORD: admin
      DB_TYPE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: etherpad
      DB_PASS: admin
      DB_USER: admin
      DB_CHARSET: utf8mb4
      # For now, the env var DEFAULT_PAD_TEXT cannot be unset or empty; 
      # it seems to be mandatory in the latest version of etherpad
      DEFAULT_PAD_TEXT: "my ether text goes here"
      DISABLE_IP_LOGGING: false
      SOFFICE: null
      TRUST_PROXY: true
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.ether.rule=Host(`ether.landingdev.xyz`)
      - traefik.http.routers.ether.entrypoints=websecure
      - traefik.http.routers.ether.tls=true
      - traefik.http.services.ether.loadbalancer.server.port=9001


  postgres:
    image: postgres:15-alpine
    container_name: postgres
    networks:
      traefik:
        ipv4_address: 172.20.8.20
    environment:
      POSTGRES_DB: etherpad
      POSTGRES_PASSWORD: admin
      POSTGRES_PORT: 5432
      POSTGRES_USER: admin
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    # Exposing the port is not needed unless you want to access this database instance from the host.
    # Be careful when other postgres docker container are running on the same port
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

