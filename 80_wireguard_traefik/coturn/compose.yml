services:
  wg_wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wg_wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE  # Optional, for kernel modules if needed
    environment:
      # "bash> id=" uid=0(root) gid=0(root) groups=0(root),988(docker)
      - PUID=0
      - PGID=0
      - TZ=Etc/UTC
      - SERVERURL=185.28.22.166
      - SERVERPORT=51820
      - PEERS=who,coturn
      - PEERDNS=auto
      - INTERNAL_SUBNET=10.13.13.0
      - ALLOWEDIPS=0.0.0.0/0
      - LOG_CONFS=true
    volumes:
      - ./wg_wireguard:/config
      - /lib/modules:/lib/modules
    ports:
      - "51820:51820/udp"
      - "80:80"
      - "443:443"
      # COTURN
      # STUN/TURN
      - "3478:3478"
      - "3478:3478/udp"
      # TLS-TURN
      - "5349:5349"
      - "5349:5349/udp"
      # RTP/RTCP relays (adjust range if you need fewer ports)
      - "49152-50100:49152-50100/udp"
      - "8080:8080"
      ############
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wg show wg0 | grep -q 'interface: wg0' || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 30s

  # nginx reverse-proxy has to run on the wireguard hub
  nginx_proxy:
    image: nginx:latest
    container_name: nginx_proxy
    domainname: nginx_proxy
    network_mode: service:wg_wireguard
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/ssl:ro
      - ./nginx_html:/usr/share/nginx/html:ro
      - ./nginx_logs:/var/log/nginx
    restart: unless-stopped
    depends_on:
      wg_wireguard:
        condition: service_healthy
    healthcheck:
      # test: ["CMD-SHELL", "curl -fs http://10.13.13.2:80/ || exit 1"]
      test: ["CMD-SHELL", "nginx -t && curl -fs http://localhost:80/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
        
  wg_who:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wg_who
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./wg_who:/config
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    depends_on:
      wg_wireguard:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wg show wg0 latest-handshakes | grep -q . || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  who:
    image: traefik/whoami:latest
    container_name: who
    network_mode: service:wg_who
    restart: unless-stopped
    depends_on:
      wg_who:
        condition: service_healthy

      
  wg_coturn:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wg_coturn
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./wg_coturn:/config
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    depends_on:
      wg_wireguard:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wg show wg0 latest-handshakes | grep -q . || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  coturn:
    image: coturn/coturn:latest
    container_name: coturn
    user: "65534:65534"
    network_mode: service:wg_coturn
    restart: unless-stopped
    volumes:
      - ./coturn-data:/var/lib/coturn
      - ./coturn-data:/var/tmp
      - ./coturn-data:/var/log
      - ./turnserver.conf:/etc/coturn/turnserver.conf:ro
      - ./certs:/coturn/certs
    depends_on:
      wg_coturn:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "turnutils_stunclient -p 3478 10.13.13.3 && turnutils_uclient -u turn -w turn -p 3478 -y 10.13.13.3"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
