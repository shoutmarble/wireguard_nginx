

networks:
  net:
    external: true

services:

  jwt:
    image: ghcr.io/element-hq/lk-jwt-service:latest

    container_name: jwt
    hostname: jwt

    networks:
      net:
        ipv4_address: 10.10.120.80
        ipv6_address: fd12:3456:789a::120:80
    environment:
      - LIVEKIT_URL=https://livekit.landingdev.xyz/
      - LIVEKIT_KEY=APIjzYc2uVaQpV7
      - LIVEKIT_SECRET=bCogvMuTNxKXAMpMDkIGdsCfoMa8NQTfplFBk6ieSXqA
      - LIVEKIT_JWT_PORT=8080
      - LIVEKIT_FULL_ACCESS_HOMESERVERS=*
      # - LIVEKIT_FULL_ACCESS_HOMESERVERS=livekit.landingdev.xyz
    restart: unless-stopped
    depends_on:
      wellknown:
        condition: service_healthy

    labels:
        - traefik.enable=true
        - traefik.http.routers.jwt.rule=Host(`jwt.landingdev.xyz`)
        - traefik.http.routers.jwt.entrypoints=websecure
        - traefik.http.routers.jwt.tls=true
        - traefik.http.services.jwt.loadbalancer.server.port=8080


  wellknown:
    image: nginx:latest

    container_name: wellknown

    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./SYN/MATRIX/:/usr/share/nginx/html/:ro

    restart: unless-stopped

    networks:
      net:
        ipv4_address: 10.10.120.70
        ipv6_address: fd12:3456:789a::120:70

    depends_on:
      chat:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/.well-known/matrix/client"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - traefik.enable=true
      
      - "traefik.http.routers.matrix-client-secure.rule=Host(`chat.landingdev.xyz`) && Path(`/.well-known/matrix/client`)"
      - "traefik.http.routers.matrix-client-secure.entrypoints=websecure"
      - "traefik.http.routers.matrix-client-secure.tls=true"
      - "traefik.http.routers.matrix-client-secure.service=matrix-client-service"
      
      - "traefik.http.routers.matrix-server-secure.rule=Host(`matrix.landingdev.xyz`) && Path(`/.well-known/matrix/server`)"
      - "traefik.http.routers.matrix-server-secure.entrypoints=websecure"
      - "traefik.http.routers.matrix-server-secure.tls=true"
      - "traefik.http.routers.matrix-server-secure.service=matrix-server-service"

      # Define services (point to Nginx container port)
      - "traefik.http.services.matrix-client-service.loadbalancer.server.port=80"
      - "traefik.http.services.matrix-server-service.loadbalancer.server.port=80"
          
  chat:
    image: vectorim/element-web:latest
    container_name: chat

    networks:
      net:
        ipv4_address: 10.10.120.60
        ipv6_address: fd12:3456:789a::120:60

    restart: unless-stopped

    volumes:
      - ./SYN/MATRIX/.well-known/matrix/client:/app/config.json

    depends_on:
      synapse:
        condition: service_healthy

    labels:
      - traefik.enable=true
      - traefik.http.routers.chat.rule=Host(`chat.landingdev.xyz`) && !PathPrefix(`/.well-known/matrix`)
      - traefik.http.routers.chat.entrypoints=websecure
      - traefik.http.routers.chat.tls=true
      - traefik.http.services.chat.loadbalancer.server.port=80

      - traefik.http.middlewares.chat-security.headers.frameDeny=false
      - traefik.http.middlewares.chat-security.headers.customFrameOptionsValue=SAMEORIGIN
      - traefik.http.middlewares.chat-security.headers.contentTypeNosniff=true
      - traefik.http.middlewares.chat-security.headers.customResponseHeaders.X-XSS-Protection=1; mode=block
      - traefik.http.middlewares.chat-security.headers.customResponseHeaders.Content-Security-Policy=frame-ancestors 'self'
      - traefik.http.routers.chat.middlewares=chat-security
      
      
  synapse:
    image: docker.io/matrixdotorg/synapse:latest

    container_name: matrix
    
    restart: unless-stopped
    volumes:
      - ./SYN/synapse:/data:rw

    environment:
      SYNAPSE_CONFIG_DIR: /data
      SYNAPSE_CONFIG_PATH: /data/homeserver.yaml

    networks:
        net:
            ipv4_address: 10.10.120.50
            ipv6_address: fd12:3456:789a::120:50

    labels:
      - traefik.enable=true

      - traefik.http.routers.matrix-client.rule=Host(`matrix.landingdev.xyz`)
      # - traefik.http.routers.matrix-client.rule=Host(`matrix.landingdev.xyz`) && (PathPrefix(`/_matrix/client/`) || PathPrefix(`/_matrix/static/`) || PathPrefix(`/_matrix/health`))
      - traefik.http.routers.matrix-client.entrypoints=websecure
      - traefik.http.routers.matrix-client.tls=true
      - traefik.http.services.matrix-client.loadbalancer.server.port=8008

      # - traefik.http.routers.matrix-federation.rule=Host(`matrix.landingdev.xyz`) && (PathPrefix(`/_matrix/federation/`) || PathPrefix(`/_matrix/key/`) || PathPrefix(`/_matrix/media/`))
      # - traefik.http.routers.matrix-federation.entrypoints=websecure
      # - traefik.http.routers.matrix-federation.tls=true
      # - traefik.http.services.matrix-federation.loadbalancer.server.port=8448


      
          
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      synapse_db:
        condition: service_healthy

  synapse_db:
    image: docker.io/postgres:latest

    container_name: synapse_db
    hostname: synapse_db
    
    restart: unless-stopped
    environment:
      - POSTGRES_USER=synapse
      - POSTGRES_PASSWORD=synapse
      - POSTGRES_DB=synapse
      - POSTGRES_INITDB_ARGS=--encoding='UTF8' --lc-collate='C' --lc-ctype='C'
    volumes:
      - ./syn-pg-data:/var/lib/postgresql/data

    networks:
        net:
            ipv4_address: 10.10.120.40
            ipv6_address: fd12:3456:789a::120:40

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U synapse -d synapse"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      livekit:
        condition: service_healthy
      
  livekit:
    image: livekit/livekit-server:latest
    container_name: livekit
    
    command: --config /etc/livekit.yaml
    restart: unless-stopped

    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
      - "49500-49800:49500-49800/udp"
      - "7881:7881"
      - "7882:7882/udp"

    networks:
        net:
            ipv4_address: 10.10.120.20
            ipv6_address: fd12:3456:789a::120:20

    volumes:
      - ./livekit.yaml:/etc/livekit.yaml
      - ./ZEROSSL.185.28.22.166:/opt/certs/ip
      - ./ZEROSSL.CERTIFICATES:/opt/certs/name

    healthcheck:
      test: ["CMD", "sh", "-c", "wget --no-verbose --tries=5 --spider http://localhost:7880 || kill 1"]
      interval: 20s
      timeout: 1s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy
     
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.livekit.rule=Host(`livekit.landingdev.xyz`)"
      - "traefik.http.routers.livekit.entrypoints=websecure"
      - "traefik.http.routers.livekit.tls=true"

      - "traefik.http.routers.livekit.tls.certresolver=mytls"
      - "traefik.http.routers.livekit.service=livekit"
      
      - "traefik.http.services.livekit.loadbalancer.server.port=7880"

  redis:
    image: redis:7-alpine
    container_name: lk_redis

    command: redis-server /etc/redis.conf
    restart: unless-stopped

    networks:
        net:
            ipv4_address: 10.10.120.30
            ipv6_address: fd12:3456:789a::120:30

    volumes:
      - ./redis.conf:/etc/redis.conf
      - ./redis.acl:/opt/redis/redis.acl

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3
